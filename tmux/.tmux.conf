# Use vim keybindings in copy mode
setw -g mode-keys vi
# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

set-window-option -g xterm-keys on
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -T copy-mode-vi y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"


# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

setw -g pane-base-index 1
bind-key | split-window -h
bind-key - split-window -v
#bind -n S-Right next-window
#bind -n S-Left previous-window
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# copy-paste stuff
bind-key P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# status bar
set -g base-index 1
set -g status-style bg=black,fg=white 
set -g message-style bg=red,fg=white
set -g status-right-length 80
set -g status-left-length 70

# General options
set-option -g pane-active-border-style fg=blue
set-option -g default-terminal "xterm-256color"
set-option -g status-position bottom
set -g status-keys vi
set -g bell-action any
set -g visual-bell off
set -g set-titles on
set -g set-titles-string '#S.#I.#P #W #T' # session.windowindex.paneindex windowname windowtitle
set -g status-left '#[fg=white]#[bg=black]#{?client_prefix,#[bg=colour2],} ❐ #S.#I.#P #[default]'
set -g status-right "#(hostname) #{battery_icon} #{battery_percentage} #{battery_remain} #(date "+%H:%M")"
#set -g mouse-select-pane on

# Window options
setw -g mouse on
# setw -g aggressive-resize on
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize off
set-window-option -g xterm-keys on
setw -g monitor-activity on
setw -g window-status-style bg=black
setw -g window-status-current-style bg=blue
setw -g allow-rename off
setw -g xterm-keys on
set -g window-status-format '#I:#W' # '(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#W' #(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set-option -g status-interval 10

# disable auto renaming
setw -g automatic-rename off
setw -g alternate-screen on

# Full screen
unbind-key Up
bind-key Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind-key Down
bind-key Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
unbind-key -n C-1
unbind-key -n C-2
unbind-key -n C-3
unbind-key -n C-4
unbind-key -n C-5
unbind-key -n C-6
unbind-key -n C-7
unbind-key -n C-8
unbind-key -n C-9
unbind-key -n C-0
bind-key -n       C-1 select-window -t :=1
bind-key -n       C-2 select-window -t :=2
bind-key -n       C-3 select-window -t :=3
bind-key -n       C-4 select-window -t :=4
bind-key -n       C-5 select-window -t :=5
bind-key -n       C-6 select-window -t :=6
bind-key -n       C-7 select-window -t :=7
bind-key -n       C-8 select-window -t :=8
bind-key -n       C-9 select-window -t :=9
bind-key -n       C-0 select-window -t :=10

set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set-option -g renumber-windows on

set-option -ga terminal-overrides ",xterm-256color:Tc"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
